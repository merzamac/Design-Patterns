Patrones Creacionales
• Singleton: Un solo objeto para una clase
• Factory Method: Crear objeto sin exponer lógica de creación
• Builder: Construcción de un objeto complejo paso a paso
• Prototype: Copiar objetos existentes
• Abstract Factory: Crear familias de objetos relacionados

Patrones Estructurales
• Adapter: Interfaz unificada entre interfaces incompatibles
• Decorator: Añadir responsabilidades a objetos dinámicamente
• Facade: Interfaz simplificada de un sistema complejo
• Composite: Componer objetos en estructuras de árbol
• Flyweight: Minimizar uso de memoria o costos computacionales
• Bridge: Separar abstracción de implementación

Patrones de Comportamiento
• Observer: Suscribir y notificar cambios a varios objetos
• Command: Encapsular una solicitud como un objeto
• Strategy: Permitir la selección de un algoritmo en tiempo de ejecución
• State: Cambios de comportamiento de un objeto cuando su estado interno cambia
• Chain of Responsibility: Pasar solicitudes a lo largo de una cadena de manejadores